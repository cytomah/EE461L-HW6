{"version":3,"sources":["components/content.js","App.js","reportWebVitals.js","index.js"],"names":["Content","props","state","nameValue","handleChange","bind","handleSubmit","event","this","setState","value","target","axios","get","then","response","data","result","catch","error","console","log","preventDefault","onSubmit","type","onChange","React","Component","App","useState","setLastName","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRA2CeA,E,kDAvCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CAACC,UAAW,IACzB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJN,E,gDAOlB,SAAaE,GACTC,KAAKC,SAAS,CAACC,MAAMH,EAAMI,OAAOD,U,0BAEtC,SAAaH,GAAO,IAAD,OACfK,IAAMC,IAAI,+BAAiCL,KAAKN,MAAMQ,OAAOI,MAAK,SAAAC,GAAY,EAAKN,SAAS,CAACN,UAAWY,EAASC,KAAKC,YAAWC,OAAM,SAAAC,GACnIC,QAAQC,IAAIF,MAGhBZ,EAAMe,mB,oBAMT,WACE,OACK,uBAAMC,SAAUf,KAAKF,aAArB,UACI,4BACA,+CACA,uBAAOkB,KAAK,OAAOd,MAAOF,KAAKN,MAAMQ,MAAOe,SAAUjB,KAAKJ,oBAG/D,8BACI,uBAAOoB,KAAK,SAASd,MAAM,WAC3B,6BAAKF,KAAKN,MAAMC,sB,GAhCVuB,IAAMC,WCwBbC,MAtBf,WACE,MAAmCC,mBAAS,IAA5C,mBAAoBC,GAApB,WAWA,OATAC,qBAAU,WACRnB,IAAMC,IAAI,qCAAqCC,MAAK,SAAAC,GAClDK,QAAQC,IAAI,UAAWN,GACvBe,EAAYf,MACXG,OAAM,SAAAC,GACPC,QAAQC,IAAIF,QAGb,IAED,gCACA,kDAGA,cAAC,EAAD,QCVWa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.09686ffd.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport React, {useEffect, useState} from 'react';\r\n \r\nclass Content extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {nameValue: ''};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n \r\n    handleChange(event){\r\n        this.setState({value:event.target.value});\r\n    }\r\n    handleSubmit(event){\r\n        axios.get('http://localhost:5000/flask/' + this.state.value).then(response =>{this.setState({nameValue: response.data.result})}).catch(error => {\r\n            console.log(error)\r\n        })\r\n \r\n        event.preventDefault();\r\n    }\r\n   \r\n \r\n       \r\n   \r\n     render() {\r\n       return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <p>\r\n                <label>First Name\r\n                <input type=\"text\" value={this.state.value} onChange={this.handleChange}/>\r\n                </label>\r\n            </p>\r\n            <p>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n                <h1>{this.state.nameValue}</h1>\r\n            </p>\r\n            </form>\r\n           \r\n       );\r\n     }\r\n    }\r\n \r\nexport default Content;","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport Content from  './components/content.js'\n \nfunction App() {\n  const [getLastName, setLastName] = useState({})\n \n  useEffect(()=>{\n    axios.get('http://localhost:5000/flask/hello').then(response => {\n      console.log(\"SUCCESS\", response)\n      setLastName(response)\n    }).catch(error => {\n      console.log(error)\n    })\n \n  }, [])\n  return (\n    <div>\n    <h3>\n      Last Name Finder\n    </h3>\n    <Content/>\n    </div>\n  );\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}